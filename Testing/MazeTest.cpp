#include <string>
#include <iostream>
#include "Iw2D.h"
//#include "input.h"
#include "s3ePointer.h"
#include "IwResManager.h"
#include "s3eKeyboard.h"
#include "Iw2DSceneGraph.h"
#include "math.h"
#include "IwGx.h"
#include <sstream>
using namespace std;
#include "MazeGenerator.h"
#include "MazeDrawer.h"
#include "PlayerMovement.h"
#include "menu.h"
#include <stdio.h>
#include <list>
#include <fstream>


//Test case 1:
//Test the number of rings are generated within the range of its difficulty level
//It hard for us to test the classes individually, since alot of the function use drawing function from the marmalade game engine we are using
//one way to test is to visualize the maze generated by our program and check it against our algorithm
//another way is to add print statement in the function to see if the value generated it's within the range we set.
void testRing(){
    //check the return value by calling set difficulty
    setDifficulty(1);
    setDifficulty(2);
    setDifficulty(3);
    //In
    DrawMaze(currentLevel, Color, InGameBg, MazeOverlay);
   //added print function
    printf("radius ========= %f", radius);
    if (printed == 0) printf("Max Level = %i [%i][%i][1]: leftpt = %f  block = %f parent = %f  chlidnm = %f blockleft = %f blockright = %f\n", MaxLevel, leveler, door, level[leveler][door][1], level[leveler][door][2], level[leveler][door][0], level[leveler][door][5], level[leveler][door][3], level[leveler][door][4]);
  //when assigning location for the doors, print the coordinate
   printf("x = %f, y = %f \n", x, y);
   //In
    printall()
    printf("---Max Level = %i [%i][%i][1]: leftpt = %f  block = %f parent = %f  childnm = %f blockleft = %f blockright = %f\n",
    
}


//Test case 2:
//Test the door amount is correct, print the door amount based on the level and check to see if it is within the range
void testDoor(){
    //In
    DoorGenerator();
    int currentLevel  = 3;
    if (currentLevel != 1){   // if it is not the first level, the dooramount is decided by the function assignParentChild
        DoorAmount = AssignParentChild(currentLevel, prevDoorAmount);
    }
    printf("door amount = %i, MaxLevel = %i ", DoorAmount, MaxLevel);
    
//print statements are added to the function that will print the generated door amount and position based on the difficulty level.
// the dooramount is decided by the function assignParentChild
//each level 6 doors
//blocks are based on how many doors are there for the previous level. It is draw within the range
//check the number printed to see if it is the correct amount.
}



//Test case 3:
//Test that the door and block is randomly placed on the ring and the block doesnâ€™t come across the door
void testBlock(){
    BlockGenerator(1,4);
  //In BlockGenerator function
    printf("blockpt = %f \n ", blockpt);
  //check the blockpt
  //For different level, call draw maze function to see that the that the maze displaying doesn't have any block tht come across the door, and check that the door and block is at different position everytime we restart the game.
   DrawMaze(currentLevel, Color, InGameBg, MazeOverlay);

}